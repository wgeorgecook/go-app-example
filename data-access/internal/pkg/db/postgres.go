package db

import (
	"context"

	petapisv1 "buf.build/gen/go/wgeorgecook/go-app-example/protocolbuffers/go/wgeorgecook/petapis/v1"
	"github.com/jackc/pgx/v5"
)

var conn *pgx.Conn

// Connect instantiates a *pgx.Connection and returns
// error it returns or nil. Caller is
// responsible for closing the returned connection
// when it is unused.
func Connect(dbUri string) error {
	if conn != nil {
		return nil
	}
	var err error
	conn, err = pgx.Connect(context.Background(), dbUri)
	if err != nil {
		return err
	}

	return nil
}

// Shutdown closes the connection instantiated by Connect
func Shutdown(ctx context.Context) error {
	if conn == nil {
		return nil
	}

	return conn.Close(ctx)
}

// Query uses the provided connection to run the
// query generated by the input petapisv1.Query and
// returns either a slice of Pet or an error.
func Query(queryFields []petapisv1.Query) ([]Pet, error) {
	return getAllPets()
}
